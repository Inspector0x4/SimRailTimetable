[{"C:\\xampp\\htdocs\\SimRailRequest\\simrail-request\\src\\app\\head.tsx":"1","C:\\xampp\\htdocs\\SimRailRequest\\simrail-request\\src\\app\\layout.tsx":"2","C:\\xampp\\htdocs\\SimRailRequest\\simrail-request\\src\\app\\page.tsx":"3","C:\\xampp\\htdocs\\SimRailRequest\\simrail-request\\src\\pages\\train.js":"4","C:\\xampp\\htdocs\\SimRailRequest\\simrail-request\\src\\pages\\[id].js":"5"},{"size":266,"mtime":1676403755234,"results":"6","hashOfConfig":"7"},{"size":380,"mtime":1676650284583,"results":"8","hashOfConfig":"7"},{"size":2158,"mtime":1676801041034,"results":"9","hashOfConfig":"7"},{"size":4581,"mtime":1676741914179,"results":"10","hashOfConfig":"7"},{"size":2534,"mtime":1676742008386,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f550xz",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\SimRailRequest\\simrail-request\\src\\app\\head.tsx",[],[],"C:\\xampp\\htdocs\\SimRailRequest\\simrail-request\\src\\app\\layout.tsx",[],[],"C:\\xampp\\htdocs\\SimRailRequest\\simrail-request\\src\\app\\page.tsx",[],[],"C:\\xampp\\htdocs\\SimRailRequest\\simrail-request\\src\\pages\\train.js",["28"],[],"import { useRouter } from 'next/router';\r\nimport { useState } from \"react\"\r\n\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport { Grid,Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, makeStyles} from '@material-ui/core';\r\n\r\n\r\nimport Head from 'next/head'\r\nimport React, {  useEffect } from \"react\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\nconst Server = () => {\r\n  const router = useRouter();\r\n\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const { id } = router.query;\r\n  \r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if(!router.isReady) return;\r\n      const { id } = router.query;\r\n      const response = await fetch(`https://staging.simrail.deadlykungfu.ninja/train/${id}`);\r\n      const data = await response.json();\r\n      const promises = [];\r\n      data.forEach(async (station) => {\r\n       \r\n      });\r\n     \r\n    \r\n\r\n    Promise.all(promises)\r\n    .then(() => {\r\n      setData(data);\r\n      setIsLoaded(true);\r\n      \r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n  fetchData();\r\n}, [router.isReady]);\r\n\r\n  if (!isLoaded) {\r\n    return <div>\r\n      \r\n      Loading data... Please Wait</div>;\r\n    }\r\n\r\n\r\n    //\r\n    \r\n  const generatePDF = () => {\r\n    const docDefinition = {\r\n      content: [\r\n        {\r\n          text: `Train ${id} Information : `,\r\n          style: 'header'\r\n        },\r\n        {\r\n          style: 'table',\r\n          table: {\r\n            headerRows: 1,\r\n            widths: ['*', '*', '*', '*', '*', '*'],\r\n            body: [\r\n              ['Station Name', 'Arrival Time', 'Departure Time', 'Stop Type','Layover Time','Line'],\r\n              ...data.map(station => [station.station, station.scheduled_arrival_hour, station.scheduled_departure_hour, station.stop_type,station.layover,station.line])\r\n            ],\r\n          }\r\n        }\r\n      ],\r\n      styles: {\r\n        header: {\r\n          fontSize: 18,\r\n          bold: true,\r\n          alignment: 'center',\r\n          margin: [0, 0, 0, 10]\r\n        },\r\n        table: {  \r\n          margin: [0, 10, 0, 10]\r\n        }\r\n      }\r\n    };\r\n    \r\n    pdfMake.createPdf(docDefinition).download(`${id} Timetable.pdf`);\r\n  }\r\n\r\n  const redirectToMenu = (event) => {\r\n    const { server } = router.query;\r\n    router.push(`/${server}`);\r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Head><title>SimRail Information</title></Head>\r\n\r\n      {isLoaded && (\r\n        <div>\r\n          <Grid container spacing={0}  alignItems=\"flex-start\">\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={redirectToMenu}>Go back to the main menu</Button>\r\n          </Grid>\r\n           <Grid container spacing={0} justifyContent=\"center\" alignItems=\"center\" >\r\n         <Button variant=\"contained\" color=\"primary\" size=\"medium\" onClick={generatePDF}>Download timetable for {id}</Button>\r\n         \r\n         <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\">\r\n            <Grid item xs={8} >\r\n       <p> If there is no data available, please check again in a few minutes</p>\r\n       </Grid>\r\n       </Grid>\r\n         </Grid>\r\n         <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\">\r\n            <Grid item xs={8} >\r\n         <TableContainer component={Paper} >\r\n         <Table stickyHeader >\r\n          <TableHead >\r\n          <TableRow>\r\n          <TableCell><b>Station Name</b></TableCell>\r\n          <TableCell><b>Arrival Time</b></TableCell>\r\n          <TableCell><b>Departure Time</b></TableCell>\r\n          <TableCell><b>Stop Type</b></TableCell>\r\n          <TableCell><b>Layover Time</b></TableCell>\r\n          <TableCell><b>Line</b></TableCell>\r\n          </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n              {data.map(station => (\r\n                <TableRow key={station.station}>\r\n                  \r\n                  <TableCell>{station.station}</TableCell>\r\n                  <TableCell>{station.scheduled_arrival_hour}</TableCell>\r\n                  <TableCell>{station.scheduled_departure_hour}</TableCell>\r\n                  <TableCell>{station.stop_type}</TableCell>\r\n                  <TableCell>{station.layover}</TableCell>\r\n                  <TableCell>{station.line}</TableCell>\r\n                  </TableRow>\r\n              ))}\r\n           </TableBody>\r\n           </Table>\r\n          </TableContainer>\r\n          </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Server;\r\n","C:\\xampp\\htdocs\\SimRailRequest\\simrail-request\\src\\pages\\[id].js",[],[],{"ruleId":"29","severity":1,"message":"30","line":43,"column":4,"nodeType":"31","endLine":43,"endColumn":20,"suggestions":"32"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router.query'. Either include it or remove the dependency array.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [router.isReady, router.query]",{"range":"36","text":"37"},[1173,1189],"[router.isReady, router.query]"]